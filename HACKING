=========================
= Installing Dependencies
=========================

This section will help you to install two different sets of packages:

  1) Analizo dependencies
  2) extra programs needed to run Analizo test suite (if needed)

Short version (for Debian users):
---------------------------------

All of the steps must be performed as root user:

1) Add the following line to your /etc/apt/sources.list:

  deb http://analizo.org/download/ ./

2) Install the needed Debian packages:

  $ wget -O - http://analizo.org/download/signing-key.asc | apt-key add -
  $ sudo apt-get update
  $ sudo apt-get install doxyparse sloccount libgraph-perl liblist-compare-perl libtest-class-perl libtest-exception-perl libyaml-perl libclass-accessor-perl libstatistics-descriptive-perl libstatistics-online-perl ruby graphviz libzeromq-perl libdbd-sqlite3-perl libdigest-sha1-perl


# If you don't plan to develop Analizo (i.e. you only want to use it), you can
stop here.

3) Install extra software to run the acceptance tests:

  $ sudo apt-get install rake rubygems libtest-mockmodule-perl libtest-mockobject-perl
  $ gem install cucumber rspec


Long version (general instructions):
------------------------------------

All of the steps must be performed as root user:

1) Install the following Perl modules, using CPAN or your native package manager:

  * Class::Accessor
  * Getopt::Euclid
  * Graph
  * List::Compare
  * Statistics::Descriptive
  * Statistics::OnLine
  * Test::Class
  * Test::Exception
  * YAML

2) Install Doxyparse build dependencies: flex, bison, libqt4-dev, gcc, gcc-c++,
and git (your operating system probably already has packages for these)

3) Install Doxyparse

  $ git clone git://gitorious.org/analizo/doxyparse.git
  $ cd doxyparse
  $ ./configure --with-doxyparse
  $ make
  $ sudo install bin/doxyparse /usr/local/bin/

4) Install sloccount - http://www.dwheeler.com/sloccount/sloccount.html


# If you don't plan to develop Analizo (i.e. you only want to use it), you can
stop here.

5) Install Rake - http://rake.rubyforge.org/

  * your operating system probably already has a pre-built package for it
  * otherwise follow the installation instructions on the website

6) Install rubygems - http://docs.rubygems.org/

  * your operating system will probably already have a pre-build package for it.
If you have Ruby installed, you may already have rubygems installed as well.

7) Install cucumber and rspec using rubygems

  $ gem install cucumber rspec

========================
= Running the test suite
========================

Just run `rake` in the root of the sources:

  $ rake

See "Installing Dependencies" above for a guide to install all the software
that's needed to run Analizo tests.

===========================
= Style and Good practices
===========================

Always write automated tests for your code:

  * if you are adding a new feature, write a new cucumber feature
    file that shows how the feature is expected to work
  * if you are fixing a bug, make sure that you add a test that fails because
    of the bug, and then work on a fix to it.
  * If removing any code does not make any test to fail, then that code can be
    removed at any time.
  * Make sure the existing tests still pass after you change, add or remove
    any code.

Refactoring code to make it simpler, easier to change or extend is always a
good thing. Just make sure that the entire test suite still passes after you do
any refactoring.


Use 2 indentation of 2 spaces.

Please always put the opening curly brace of a block in the same line of the
corresponding instruction (e.g.  if, for etc).

  Good:

  if (...) {
    ...
  }

  Bad:

  if (...)
  {
    ...
  }

Always "use strict" in the top of new modules.

Don't bother changing the AUTHORS file. It's automatically generated as part of
the release process. See the Rakefile for more information.

=================
= Sending patches
=================

Send the patches to the Analizo mailing list: analizo@listas.softwarelivre.org,
or to terceiro@softwarelivre.org

You don't need to be subscribed to the mailing list to send, but make sure you
mention that if you want to receive an off-list reply. But it's recommended
that you do subscribe to the mailing list. To do so, go to the list
subscription page:

  * http://listas.softwarelivre.org/cgi-bin/mailman/listinfo/mezuro

To create a patch:

  $ git clone git://gitorious.org/analizo/analizo.git
  $ cd analizo
    edit file
  $ git commit file
  $ git format-patch origin

This will generate patch files named like:

  0001-message-you-typed-for-the-commit.patch

If you want to make several changes, please consider making one commit (and
therefore one patch) for each different logical change you want to make.  In
this case, after running git format-patch you'll have a series of patch files
named like 0001-..., 0002-..., just send them all.

You are encouraged to learn how to use git since it's a powerful version
control system and it can make it easy for you to keep in sync with Analizo
development.

